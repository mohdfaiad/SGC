unit UContasPagarController;

interface

uses
  Classes, SQLExpr, SysUtils, Generics.Collections, DBXJSON, DBXCommon,
  ConexaoBD,
  UPessoasVO, UController, DBClient, DB, UContasPagarVO, UPessoasController, UCondominioController,
  UPlanoCOntasController, UCondominioVO, UPlanoContasVO, UHistoricoVO;

type
  TContasPagarController = class(TController<TContasPagarVO>)
  private

  public
    function ConsultarPorId(id: integer): TContasPagarVO;
    procedure ValidarDados(Objeto:TContasPagarVO);override;
    function Inserir(ContasPagar: TContasPagarVO): integer;
  end;

implementation

uses
  UDao, Constantes, Vcl.Dialogs;

function TContasPagarController.ConsultarPorId(id: integer): TContasPagarVO;
var
  P: TContasPagarVO;
  PessoaController : TPessoasController;
begin
  P := TDAO.ConsultarPorId<TContasPagarVO>(id);
  PessoaController := TPessoasController.Create;


  if (P <> nil) then
  begin
      p.CondominioVO := TDAO.ConsultarPorId<TCondominioVO>(P.IdCondominio);
      p.PessoaVO := PessoaController.ConsultarPorId(p.IdPessoa);
    //  p.PessoaVO := TDAO.ConsultarPorId<TPessoasVO>(P.IdPessoa);
      p.PlanoContasContaVO := TDAO.ConsultarPorId<TPlanoContasVO>(P.IdConta);
      P.PlanoContasContraPartidaVO := TDao.ConsultarPorId<TPlanoContasVO>(P.IdContraPartida);
      p.HistoricoVO := TDao.ConsultarPorId<THistoricoVO>(P.IdHistorico);
  end;


  result := P;
end;

function TContasPagarController.Inserir(ContasPagar: TContasPagarVO): integer;
var contaPlano:TPlanoContasVO;
    PessoaVo : TPessoASvo;
    listaConta :TObjectList<TPlanoContasVO>;
    Query : String;
    idcontafor, idcontadebito,idcontacredito:integer;
    PlanoContasController : TPlanoContasController;
begin
  try     
    idcontafor:=0;
    TDBExpress.IniciaTransacao;
    Result := TDAO.Inserir(ContasPagar);
    if(ContasPagar.IdPessoa>0)then
    begin
      PlanoContasController := TPlanoContasController.Create;
      Query :=  ' PlanoContas.idPessoa = ' +(IntTOsTR(ContasPagar.IdPessoa));
      listaConta := PlanoContasController.Consultar(query);
      if (listaConta.Count <= 0) then
      begin      
        ContasPagar.PessoaVO := TDao.ConsultarPorId<TPessoasVO>(ContasPagar.IdPessoa);
        contaPlano:=TPlanoContasVO.Create;
        ContaPlano.nrClassificacao:= '2.1.25.01';
        contaplano.dsConta:= ContasPagar.PessoaVO.nome;
        contaplano.flTipo:= 'F';
        contaPlano.idcondominio:=ContasPagar.idcondominio;
        contaPlano.idPessoa:= ContasPagar.IdPessoa;
        idcontafor:= TDAO.Inserir(contaPlano);   
      end
      else
        idcontafor:=listaConta[0].idPlanoContas;
    end;

    

    

    
    TDBExpress.ComitaTransacao;
  finally
    TDBExpress.RollBackTransacao;
  end;
end;

procedure TContasPagarController.ValidarDados(Objeto: TContasPagarVO);
begin
  inherited;

end;

begin

end.
