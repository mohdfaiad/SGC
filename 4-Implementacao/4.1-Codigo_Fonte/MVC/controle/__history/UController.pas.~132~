unit UController;

interface

uses
  Classes, SysUtils, Forms, Windows, DB, DBClient, DBXJSON, IWSystem,
  Rtti, Atributos, StrUtils, TypInfo, Generics.Collections, Biblioteca,
  Vcl.Dialogs, UGenericVO, UDAO;

type
  TController<T: TGenericVO> = class
  private
  public
    function Inserir(Objeto: T): integer;
    function Consultar(condicao: String): TObjectList<T>;
    function ConsultarPorId(id: integer): T;
    function Alterar(Objeto: T): boolean;
    function Excluir(Objeto: T): boolean;

    procedure ValidarDados(Objeto:T);virtual;
  end;

implementation

function TController<T>.Inserir(Objeto: T): integer;
begin
  validarDados(Objeto);
  Result := TDAO.Inserir(Objeto);
end;

function TController<T>.Alterar(Objeto: T): boolean;
begin
  validarDados(Objeto);
  Result := TDAO.Alterar(Objeto);
end;

function TController<T>.Consultar(condicao: String): TObjectList<T>;
begin
  Result := TDAO.Consultar<T>(condicao, 0, true);
end;

function TController<T>.ConsultarPorId(id: integer): T;
begin
  Result := TDAO.ConsultarPorId<T>(id);
end;

function TController<T>.Excluir(Objeto: T): boolean;
begin
  Result := TDAO.Excluir(Objeto);
end;

end.
