unit UNaturezaJuridica;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UtelaCadastro, Vcl.ExtCtrls,
  Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Mask, Vcl.Buttons, Vcl.Grids, Vcl.DBGrids, UNaturezaJuridicaVO, UController, Generics.Collections;

type
  TFTelaCadastroNaturezaJuridica = class(TFTelaCadastro)
  LabelEditDescricao: TLabeledEdit;
    LabelEditNatureza: TLabeledEdit;
    GroupBox2: TGroupBox;
    RadioButtonDescricao: TRadioButton;
    RadioButtonNaturezaJuridica: TRadioButton;
  function MontaFiltro:string;
  procedure FormCreate(Sender: TObject);
  function ValidarTela:boolean;
  function DoSalvar:boolean;override;
  function DoExcluir:boolean;override;
  procedure DoConsultar;override;

  private
    { Private declarations }

  public
    { Public declarations }
    procedure GridParaEdits; override;
    function EditsToObject(NaturezaJuridica:TNaturezaJuridicaVo):TNaturezaJuridicaVo;

  end;

var
  FTelaCadastroNaturezaJuridica: TFTelaCadastroNaturezaJuridica;
  NaturezaJuridicaController: TController<TNaturezaJuridicaVo>;

implementation

{$R *.dfm}

{ TFTelaCadastroNaturezaJuridica }

procedure TFTelaCadastroNaturezaJuridica.DoConsultar;
var listaNaturezaJuridica:TObjectList<TNaturezaJuridicaVO>;
    filtro:string;
begin
  filtro:=MontaFiltro;
  listaNaturezaJuridica:= NaturezaJuridicaController.Consultar(filtro);
  PopulaGrid<TNaturezaJuridicaVO>(listaNaturezaJuridica);
end;

function TFTelaCadastroNaturezaJuridica.DoExcluir: boolean;
var NaturezaJuridica:TNaturezaJuridicaVO;
begin
  try
    try
      NaturezaJuridica := TNaturezaJuridicaVO.Create;
      NaturezaJuridica.idNatureza := CDSGrid.FieldByName('IDNATUREZA').AsInteger;
      NaturezaJuridicaController.Excluir(NaturezaJuridica);
      except
        on E: Exception do
        begin
          ShowMessage('Ocorreu um erro ao excluir o registro: '+#13+#13+e.Message);
          Result:=false;
        end;
      end;
    finally
    end;
end;

function TFTelaCadastroNaturezaJuridica.DoSalvar: boolean;
var NaturezaJuridica:TNaturezaJuridicaVO;
begin
  if(ValidarTela)then
  begin
    try
      try
          if(StatusTela=stInserindo)then
          begin
            NaturezaJuridica:=EditsToObject(TNaturezaJuridicaVO.Create);
            NaturezaJuridicaController.Inserir(NaturezaJuridica);
            Result:=true;
          end
          else if(StatusTela=stEditando)then
          begin
            NaturezaJuridica:=NaturezaJuridicaController.ConsultarPorId(CDSGrid.FieldByName('IDNATUREZA').AsInteger);
            NaturezaJuridica:=EditsToObject(NaturezaJuridica);
            NaturezaJuridicaController.Alterar(NaturezaJuridica);
            Result:=true;
          end;
        except
        on E: Exception do
        begin
          ShowMessage('Ocorreu um erro ao salvar o registro: '+#13+#13+e.Message);
          Result:=false;
        end;
      end;
    finally
    end;
  end
  else
    Result:=false;
end;

function TFTelaCadastroNaturezaJuridica.EditsToObject(NaturezaJuridica: TNaturezaJuridicaVO):TNaturezaJuridicaVO;
begin
  NaturezaJuridica.codigoNatureza:=LabelEditNatureza.Text;
  NaturezaJuridica.descricao:=LabelEditDescricao.Text;
  Result:=NaturezaJuridica;
end;

procedure TFTelaCadastroNaturezaJuridica.FormCreate(Sender: TObject);
begin
  ClasseObjetoGridVO := TNaturezaJuridicaVo;
  RadioButtonNaturezaJuridica.Checked := true;
  inherited;
end;

procedure TFTelaCadastroNaturezaJuridica.GridParaEdits;
var NaturezaJuridica:TNaturezaJuridicaVO;
begin
  inherited;

  if not CDSGrid.IsEmpty then
    NaturezaJuridica := NaturezaJuridicaController.ConsultarPorId(CDSGrid.FieldByName('IDNATUREZA').AsInteger);

  if Assigned(NaturezaJuridica) then
  begin
    LabelEditNatureza.Text:=NaturezaJuridica.codigoNatureza;
    LabelEditDescricao.Text:=NaturezaJuridica.codigoNatureza;
  end;
end;

function TFTelaCadastroNaturezaJuridica.MontaFiltro: string;
begin
  result :='';
  if (radioButtonNaturezaJuridica.Checked=true) then
  begin
      if(editBusca.Text<>'')then
        result :='( UPPER(CODIGONATUREZA) LIKE '+QuotedStr('%'+UpperCase(EditBusca.Text)+'%')+' ) ';
  end
  else if (radioButtonDescricao.Checked=true) then
  begin
    if(editBusca.Text<>'')then
      result:='( UPPER(DESCRICAO) LIKE '+QuotedStr('%'+UpperCase(EditBusca.Text)+'%')+' ) ';
end;
end;

function TFTelaCadastroNaturezaJuridica.ValidarTela: boolean;
begin
  Result:=true;
  if(labelEditNatureza.Text='') or (labelEditDescricao.Text='') then
  begin
    ShowMessage('O campo nome é obrigatório!');
    Result:=false;
  end;
end;

end.
