unit ULancamentoPadrao;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UtelaCadastro, Vcl.ComCtrls,
  Vcl.StdCtrls, Vcl.Mask, Vcl.Buttons, Vcl.ExtCtrls, Vcl.Grids, Vcl.DBGrids,Generics.Collections,
  ULancamentoPadraoVO,ULancamentoPadraoController;

type
  TFTelaCadastroLancamentoPadrao = class(TFTelaCadastro)
    Label10: TLabel;
    editidlcto: TEdit;
    Label1: TLabel;
    LabeledEditConta: TEdit;
    BtnConta: TBitBtn;
    LabeledEditDsConta: TEdit;
    Label5: TLabel;
    LabeledEditContraP: TEdit;
    BtnContra: TBitBtn;
    LabeledEditDsContra: TEdit;
    Label6: TLabel;
    LabeledEditHistorico: TEdit;
    BitBtn3: TBitBtn;
    LabeledEditDsHist: TEdit;
    GroupBox3: TGroupBox;
    RadioButton1: TRadioButton;
    procedure DoConsultar; override;
    function DoExcluir: boolean; override;
    function DoSalvar : boolean; override;
    procedure BitBtnNovoClick(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
    idCondominio : Integer;
    procedure GridParaEdits; override;
    function EditsToObject(LctoPadrao : TLancamentoPadraoVO): TLancamentoPadraoVO;

var
  FTelaCadastroLancamentoPadrao: TFTelaCadastroLancamentoPadrao;
  ControllerLctoPadrao: TLancamentoPadraoController;
end;

implementation

{$R *.dfm}

{ TFTelaCadastroLancamentoPadrao }



procedure TFTelaCadastroLancamentoPadrao.BitBtnNovoClick(Sender: TObject);
begin
  inherited;
  EditIdLcto.SetFocus;
end;

procedure TFTelaCadastroLancamentoPadrao.DoConsultar;
var
  listaLctoPadrao: TObjectList<TLancamentoPadraoVO>;
  filtro: string;
begin
  filtro := MontaFiltro;
  listaLctoPadrao := ControllerLctoPadrao.Consultar(filtro);
  PopulaGrid<TLancamentoPadraoVO>(listaLctoPadrao);
end;

function TFTelaCadastroLancamentoPadrao.DoExcluir: boolean;
var
  LctoPadrao: TLancamentoPadraoVO;
begin
  try
    try
      LctoPadrao := TLancamentoPadraoVO.Create;
      LctoPadrao.idlctoPadrao := CDSGrid.FieldByName('IDLCTOPADRAO').AsInteger;
      ControllerLctoPadrao.Excluir(LctoPadrao);
    except
      on E: Exception do
      begin
        ShowMessage('Ocorreu um erro ao excluir o registro: ' + #13 + #13 +
          E.Message);
        Result := false;
      end;
    end;
  finally
  end;
end;

function TFTelaCadastroLancamentoPadrao.DoSalvar: boolean;
var
  LctoPadrao: TLancamentoPadraoVO;
begin
    LctoPadrao:=EditsToObject(TLancamentoPadraoVO.Create);
    try
      try
        LctoPadrao.ValidarCamposObrigatorios();
        if (StatusTela = stInserindo) then
        begin
          LctoPadrao.idCondominio := idCondominio;
          ControllerLctoPadrao.Inserir(LctoPadrao);
          result := true;
        end
        else if (StatusTela = stEditando) then
        begin
          LctoPadrao := ControllerLctoPadrao.ConsultarPorId(CDSGrid.FieldByName('IDLCTOPADRAO')
            .AsInteger);
          LctoPadrao := EditsToObject(LctoPadrao);
          ControllerLctoPadrao.Alterar(LctoPadrao);
          Result := true;
        end
      except
        on E: Exception do
        begin
          ShowMessage(E.Message);
          Result := false;
        end;
      end;
    finally
    end;
end;

function TFTelaCadastroLancamentoPadrao.EditsToObject(LctoPadrao: TLancamentoPadraoVO): TLancamentoPadraoVO;
begin

  if (EditIdLcto.Text <> '') then
    LctoPadrao.observacao := EditIdLcto.Text;
  if LabeledEditConta.Text <> '' then
    LctoPadrao.idcontadebito :=  LabeledEditConta.Text;
  if LabeledEditContraP.Text <> '' then
    LctoPadrao.idContaCredito := LabeledEditContraP.Text;
  if LabeledEditHistorico.Text <> '' then
    LctoPadrao.idHistorico := LabeledEditHistorico.Text;

  Result := LctoPadrao;
end;




procedure TFTelaCadastroLancamentoPadrao.GridParaEdits;
begin
  inherited;

end;

end.
