unit TestUItensLeituraGasController;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, DB, ULeituraGasVO, SysUtils, DBClient, DBXJSON, UPessoasVO,
  UCondominioController, DBXCommon, UHistoricoVO, UEmpresaTrab, UUnidadeVO,
  UPessoasController, UPlanoCOntasController, Classes, UController,
  UItensLeituraGasController, UPlanoContasVO, ULancamentoContabilVO,
  UItensLeituraGasVo, ConexaoBD, SQLExpr, Generics.Collections;

type
  // Test methods for class TItensLeituraGasController

  TestTItensLeituraGasController = class(TTestCase)
  strict private
    FItensLeituraGasController: TItensLeituraGasController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestConsultarPorId;
    procedure TestConsultarPorIdNaoEncontrado;
  end;

implementation

procedure TestTItensLeituraGasController.SetUp;
begin
  FItensLeituraGasController := TItensLeituraGasController.Create;
end;

procedure TestTItensLeituraGasController.TearDown;
begin
  FItensLeituraGasController.Free;
  FItensLeituraGasController := nil;
end;

procedure TestTItensLeituraGasController.TestConsultarPorId;
var
  ReturnValue: TItensLeituraGasVO;
begin
  ReturnValue := FItensLeituraGasController.ConsultarPorId(269);
  if(returnvalue <> nil)  then
    check(true,'Leitura pesquisada com sucesso!')
  else
    check(False,'Leitura nao encontrada!');
end;

procedure TestTItensLeituraGasController.TestConsultarPorIdNaoEncontrado;
var
  ReturnValue: TItensLeituraGasVO;
begin
  ReturnValue := FItensLeituraGasController.ConsultarPorId(1);
  if(returnvalue <> nil)  then
    check(False,'Leitura pesquisada com sucesso!')
  else
    check(true,'Leitura nao encontrada!');
end;


initialization
  // Register any test cases with the test runner
  RegisterTest(TestTItensLeituraGasController.Suite);
end.

