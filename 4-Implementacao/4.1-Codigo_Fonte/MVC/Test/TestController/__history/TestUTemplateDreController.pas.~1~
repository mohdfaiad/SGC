unit TestUTemplateDreController;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, DB, DBXJSON, UCondominioController, ConexaoBD, Generics.Collections,
  UController, Classes, SysUtils, DBClient, UTemplateDreController, UTemplateDreVO,
  DBXCommon, SQLExpr;

type
  // Test methods for class TTemplateDreController

  TestTTemplateDreController = class(TTestCase)
  strict private
    FTemplateDreController: TTemplateDreController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestConsultarPorId;
    procedure TestConsultarPorIdNaoEncontrado;
  end;

implementation

procedure TestTTemplateDreController.SetUp;
begin
  FTemplateDreController := TTemplateDreController.Create;
end;

procedure TestTTemplateDreController.TearDown;
begin
  FTemplateDreController.Free;
  FTemplateDreController := nil;
end;

procedure TestTTemplateDreController.TestConsultarPorId;
var
   ReturnValue: TTemplateDreVO;
 // id: Integer;
begin
  ReturnValue := FTemplateDreController.ConsultarPorId(1);
  if(returnvalue <> nil)  then
    check(true,'Template Dre  pesquisado com sucesso!')
  else
    check(false,'Dre não encontrado!');
end;

procedure TestTTemplateDreController.TestConsultarPorIdNaoEncontrado;
var
   ReturnValue: TTemplateDreVO;
 // id: Integer;
begin
  ReturnValue := FTemplateDreController.ConsultarPorId(100);
  if(returnvalue <> nil)  then
    check(false,'Template Dre  pesquisado com sucesso!')
  else
    check(true,'Dre não encontrado!');
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTTemplateDreController.Suite);
end.

