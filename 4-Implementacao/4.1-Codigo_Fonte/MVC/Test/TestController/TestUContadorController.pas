unit TestUContadorController;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, DB, DBXJSON, UContadorVO, ConexaoBD, Generics.Collections, UController,
  Classes, SysUtils, DBClient, UPessoasVo, DBXCommon, UContadorController, SQLExpr,
  UPessoasController;

type
  // Test methods for class TContadorController

  TestTContadorController = class(TTestCase)
  strict private
    FContadorController: TContadorController;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestConsultarPorId;
    procedure TestConsultaPorIdNaoEncontrado;
  end;

implementation

procedure TestTContadorController.SetUp;
begin
  FContadorController := TContadorController.Create;
end;

procedure TestTContadorController.TearDown;
begin
  FContadorController.Free;
  FContadorController := nil;
end;

procedure TestTContadorController.TestConsultaPorIdNaoEncontrado;
var
  ReturnValue: TContadorVO;
begin
  ReturnValue := FContadorController.ConsultarPorId(400);
  if(returnvalue <> nil)  then
    check(false,'Contador pesquisado com sucesso!')
  else
    check(true,'Contador nao encontrado!');
end;

procedure TestTContadorController.TestConsultarPorId;
var
  ReturnValue: TContadorVO;
begin
  ReturnValue := FContadorController.ConsultarPorId(4);
  if(returnvalue <> nil)  then
    check(true,'Contador pesquisado com sucesso!')
  else
    check(true,'Contador nao encontrado!');
end;



initialization
  // Register any test cases with the test runner
  RegisterTest(TestTContadorController.Suite);
end.

