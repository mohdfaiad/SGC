unit TestUCondominioVO;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, SysUtils, Atributos, UPaisVO, UCondominioVO, UCnaeVO,
  Generics.Collections, UGenericVO, Classes, Constantes, UNaturezaJuridicaVO, UCidadeVO,
  UEstadoVO;

type
  // Test methods for class TCondominioVO

  TestTCondominioVO = class(TTestCase)
  strict private
    FCondominioVO: TCondominioVO;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestValidarCamposObrigatorios;
    procedure TestValidaCNPJ;
    procedure TestValidarCamposObrigatoriosErro;
    procedure TestValidaCNPJErro;
  end;

implementation

procedure TestTCondominioVO.SetUp;
begin
  FCondominioVO := TCondominioVO.Create;
end;

procedure TestTCondominioVO.TearDown;
begin
  FCondominioVO.Free;
  FCondominioVO := nil;
end;

procedure TestTCondominioVO.TestValidarCamposObrigatorios;
var
  ReturnValue: Boolean;
  Condominio : TCondominioVO;
begin
  Condominio:= TCondominioVO.Create;
  Condominio.nome := 'teste';
  condominio.Cnpjcpf := '08960493000113';

  try
     Condominio.ValidarCampos;
     Check(true,'sucesso!')
  except on E: Exception do
     Check(false,'Erro');
  end;
end;

procedure TestTCondominioVO.TestValidarCamposObrigatoriosErro;
var
  ReturnValue: Boolean;
  Condominio : TCondominioVO;
begin
  Condominio:= TCondominioVO.Create;
  Condominio.nome := '';
  condominio.Cnpjcpf := '08960493000113';

  try
     Condominio.ValidarCampos;
     Check(true,'sucesso!')
  except on E: Exception do
     Check(false,'Erro');
  end;
end;

procedure TestTCondominioVO.TestValidaCNPJ;
begin
  try
    FCondominioVO.ValidaCNPJ('08960493000113');
    Check(true,'Sucesso!');
    except on E: Exception do
    begin
      Check(false,'Erro');
    end;
  end;
end;


procedure TestTCondominioVO.TestValidaCNPJErro;
begin
  try
    FCondominioVO.ValidaCNPJ('99');
    Check(true,'Sucesso!');
    except on E: Exception do
    begin
      Check(false,'Erro');
    end;
  end;

end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTCondominioVO.Suite);
end.

