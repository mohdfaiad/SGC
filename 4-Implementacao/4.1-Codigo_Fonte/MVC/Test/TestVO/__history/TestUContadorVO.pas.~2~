unit TestUContadorVO;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, SysUtils, Atributos, UContadorVO, UCondominioVO, Generics.Collections,
  UGenericVO, Classes, Constantes, UPessoasVO;

type
  // Test methods for class TContadorVO

  TestTContadorVO = class(TTestCase)
  strict private
    FContadorVO: TContadorVO;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestValidarCamposObrigatorios;
    procedure TestValidarCamposObrigatoriosNaoEncontrado;
  end;

implementation

procedure TestTContadorVO.SetUp;
begin
  FContadorVO := TContadorVO.Create;
end;

procedure TestTContadorVO.TearDown;
begin
  FContadorVO.Free;
  FContadorVO := nil;
end;

procedure TestTContadorVO.TestValidarCamposObrigatorios;
var
  Contador : TContadorVO;
begin
  Contador := TContadorVO.Create;
  Contador.idPessoa := '35';
  Contador.Crc :='Teste';
  Contador.dtEntrada := ('01/01/2012');
  try
     Contador.ValidarCamposObrigatorios;
     Check(true,'Sucesso!')
  except on E: Exception do
     Check(false,'Erro!');
  end;

end;

procedure TestTContadorVO.TestValidarCamposObrigatoriosNaoEncontrado;
var
  Contador : TContadorVO;
begin
  Contador := TContadorVO.Create;
  Contador.idPessoa := '';
  Contador.Crc :='';
  Contador.dtEntrada := ('  /  /    ');
  try
     Contador.ValidarCamposObrigatorios;
     Check(false,'Erro!')
  except on E: Exception do
     Check(true,'Sucesso!');
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTContadorVO.Suite);
end.

