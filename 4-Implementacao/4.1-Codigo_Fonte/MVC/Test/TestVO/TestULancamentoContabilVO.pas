unit TestULancamentoContabilVO;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, ULancamentoPadraoVO, UContasPagarVO, UCondominioVO, SysUtils, Classes,
  UPlanoContasVO, UhistoricoVO, Atributos, ULancamentoContabilVO, Constantes,
  UContasReceberVO, UGenericVO, UItensLeituraGasVO, ULoteVO, Generics.Collections;

type
  // Test methods for class TLancamentoContabilVO

  TestTLancamentoContabilVO = class(TTestCase)
  strict private
    FLancamentoContabilVO: TLancamentoContabilVO;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestValidarCamposObrigatorios;
    procedure TestValidarCamposObrigatoriosNaoEncontrado;
  end;

implementation

procedure TestTLancamentoContabilVO.SetUp;
begin
  FLancamentoContabilVO := TLancamentoContabilVO.Create;
end;

procedure TestTLancamentoContabilVO.TearDown;
begin
  FLancamentoContabilVO.Free;
  FLancamentoContabilVO := nil;
end;

procedure TestTLancamentoContabilVO.TestValidarCamposObrigatorios;
var
  Lancamento : TLancamentoContabilVO;
begin
  Lancamento := TLancamentoContabilVO.Create;
  Lancamento.idLcto := 1;
  Lancamento.dtLcto := StrToDate('01/01/2012');
  Lancamento.idcontadebito := 4;
  Lancamento.idContaCredito := 4;
  Lancamento.idHistorico := 1;
  Lancamento.VlValor := 10;


  try
     Lancamento.ValidarCamposObrigatorios;
     Check(true,'Sucesso!')
  except on E: Exception do
     Check(false,'Erro!');
  end;
end;

procedure TestTLancamentoContabilVO.TestValidarCamposObrigatoriosNaoEncontrado;
var
  Lancamento : TLancamentoContabilVO;
begin
  Lancamento := TLancamentoContabilVO.Create;
  Lancamento.idLcto := 1;
  Lancamento.dtLcto := StrToDate('01/01/2012');
  Lancamento.idcontadebito := 0;
  Lancamento.idContaCredito := 0;
  Lancamento.idHistorico := 0;
  Lancamento.VlValor := 0;


  try
     Lancamento.ValidarCamposObrigatorios;
     Check(false,'Erro!');
  except on E: Exception do
     Check(true,'Sucesso!');
  end;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTLancamentoContabilVO.Suite);
end.

