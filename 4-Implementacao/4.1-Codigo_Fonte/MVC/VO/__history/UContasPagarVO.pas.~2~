unit UContasPagarVO;

interface

uses Atributos, Classes, Constantes, Generics.Collections, SysUtils, UGenericVO;

type
  [TEntity]
  [TTable('ContasPagar')]
  TContasPagarVO = class(TGenericVO)
  private
    FidContasPagar : Integer;
    FDtCompetencia : TDateTime;
    FDtEmissao : TDateTime;
    FDtVencimento: TDateTime;
    FNrDocumento : String;
    FVlValor : Currency;
    FDsComplemento : String;
    FIdHistorico : Integer;
    FFlBaixa : Char;
    FIdPlanoContas : Integer;

  public

//    CondominioVO : TCondominioVO;
//    UnidadeVO : TUnidadeVO;
//    PessoaVO : TPessoasVO;


    [TId('idContasPagar')]
    [TGeneratedValue(sAuto)]
    property idContasPagar : Integer  read FidPlanoContas write FidPlanoContas;

    [TColumn('idContasPagar','Código',0,[ldGrid,ldLookup,ldComboBox], False)]
    property idConta: Integer  read FidConta write FidConta;
    [TColumn('nrClassificacao','Classificação',200,[ldGrid,ldLookup,ldComboBox], False)]
    property nrClassificacao: string  read FnrClassificacao write FnrClassificacao;
    [TColumn('dsConta','Conta',400,[ldGrid,ldLookup,ldComboBox], False)]
    property dsConta: string  read FdsConta write FdsConta;
    [TColumn('flTipo','Tipo',10,[ldLookup,ldComboBox], False)]
    property flTipo: string  read FflTipo write FflTipo;
    [TColumn('idCondominio','Condomínio',0,[ldLookup,ldComboBox], False)]
    property idcondominio: integer  read Fidcondominio write Fidcondominio;
    [TColumn('idUnidade','Unidade',0,[ldLookup,ldComboBox], False)]
    property idUnidade: integer  read FidUnidade write FidUnidade;
    [TColumn('idPessoa','Pessoa',0,[ldLookup,ldComboBox], False)]
    property idPessoa: integer  read FidPessoa write FidPessoa;


    Function ValidarCamposObrigatorios:boolean;

  end;
implementation



function TPlanoContasVO.ValidarCamposObrigatorios: boolean;
begin
  Result := true;
  if (Self.FdsConta = '') then
  begin
    raise Exception.Create('O campo Descrição é obrigatório!');
    Result := false;
  end
  else if (self.FnrClassificacao = '') then
  begin
    raise Exception.Create('O campo Classificação é obrigatório!');
    Result := false;
  end;
end;
end.

